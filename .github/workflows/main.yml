name: Run Alpaca Trading Bot (Market Hours Only - 1 Min Interval)

on:
  workflow_dispatch:  # Manual start — will run forever until stopped

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install alpaca-trade-api python-dotenv pytz

      - name: Set environment variables from GitHub secrets
        run: |
          echo "APCA_API_KEY_ID=${{ secrets.APCA_API_KEY_ID }}" >> $GITHUB_ENV
          echo "APCA_API_SECRET_KEY=${{ secrets.APCA_API_SECRET_KEY }}" >> $GITHUB_ENV

      - name: Create and run Alpaca Bot script during market hours
        run: |
          cat > run_during_market_hours.py <<EOF
import time
from datetime import datetime
import pytz
import subprocess

# Market hours in Central Time (CST/CDT)
MARKET_OPEN = (8, 30)
MARKET_CLOSE = (15, 0)
CENTRAL = pytz.timezone("US/Central")

def is_market_open_now():
    now_central = datetime.now(CENTRAL)
    weekday = now_central.weekday()  # 0 = Monday, 6 = Sunday
    hour, minute = now_central.hour, now_central.minute

    # Skip weekends
    if weekday >= 5:
        return False

    # Check if within market hours
    if (hour, minute) < MARKET_OPEN or (hour, minute) >= MARKET_CLOSE:
        return False

    return True

print("🟢 Bot loop started...")

# Run in a loop, checking every minute
while True:
    now = datetime.now(CENTRAL).strftime("%Y-%m-%d %I:%M %p %Z")
    
    if is_market_open_now():
        print(f"⏱️ {now} — Market is open. Running bot.py...")
        result = subprocess.run(["python", "bot.py"])
        
        if result.returncode == 0:
            print("✅ bot.py ran successfully.")
        else:
            print(f"❌ bot.py exited with error code {result.returncode}")
    else:
        print(f"⏸️ {now} — Market is closed. Skipping.")

    print("🕐 Sleeping for 1 minute...\n")
    time.sleep(60)  # Sleep for 1 minute before next check
EOF

          # Run the created Python script
          python run_during_market_hours.py
