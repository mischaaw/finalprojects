name: Run Alpaca Trading Bot (Market Hours Only - 1 Min Interval)

on:
  schedule:
    # Runs every minute, Monday to Friday
    - cron: '*/1 9-14 * * 1-5'  # Every minute between 9 AM and 2:59 PM CST

  workflow_dispatch:  # Manual start — can be triggered manually through GitHub UI

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install alpaca-trade-api python-dotenv

      - name: Set environment variables from GitHub secrets
        run: |
          echo "APCA_API_KEY_ID=${{ secrets.APCA_API_KEY_ID }}" >> $GITHUB_ENV
          echo "APCA_API_SECRET_KEY=${{ secrets.APCA_API_SECRET_KEY }}" >> $GITHUB_ENV

      - name: Run Alpaca Bot during market hours
        run: |
          python -c "
from datetime import datetime

# Market hours in Central Time (CST/CDT)
MARKET_OPEN = (9, 30)  # Market opens at 9:30 AM CST
MARKET_CLOSE = (15, 0)  # Market closes at 3:00 PM CST

def is_market_open_now():
    now = datetime.now()  # Local time
    weekday = now.weekday()  # 0 = Monday, 6 = Sunday
    hour, minute = now.hour, now.minute

    # Skip weekends
    if weekday >= 5:
        return False

    # Check if within market hours
    if (hour, minute) < MARKET_OPEN or (hour, minute) >= MARKET_CLOSE:
        return False

    return True

now = datetime.now().strftime('%Y-%m-%d %I:%M %p')  # Local time format

if is_market_open_now():
    print(f'⏱️ {now} — Market is open. Running bot.py...')
    result = os.system("python bot.py")  # Runs the bot.py script
    
    if result == 0:
        print('✅ bot.py ran successfully.')
    else:
        print(f'❌ bot.py exited with error code {result}')
else:
    print(f'⏸️ {now} — Market is closed. Skipping.')
          "
          
